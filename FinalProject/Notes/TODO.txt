


TODO
	
	NEED TO GET DONE
	----------------
	--css pages (login, register)


	THREADS AND REPLIES
	----------------------------------------------------
	--When viewing a thread, show user overall post count? (the right side of the post box thing)
	--When viewing a thread, at the top of the page show the thread subject
	--Allow for edits in posts (SQL statements to pull the content, push it into the textarea on "Posting.aspx", and allow the user to resend it. Still sort it by the initial time created,
	  but show the last time modified on the post somewhere?)
	--Allow for deleting/purging of posts, threads, users. If you wanted to delete a user, FIRST delete all posts they made, SECOND find all threads they made and delete those posts then delete
	  that thread (in that order otherwise database throws a fit), THIRD delete the user
	----For deleting a post, just remove that post from the posts database
	----For deleting a thread, remove the posts that have the threadID = threadID THEN remove the thread from the Threads.DB


	LOGIN
	---------------------------------------------------
	--Change button text/functionality when a user is logged in
	--SIGN OUT FEATURE (would just be clearing cookies/session data)
	-?-Usernames not case sensitive
	--Change SessionState object to cookie, will need to change resulting code in other classes


	LOGIN AND REDIRECT
	---------------------------------------------------
	--Once sign up is complete, automatically log the user in, redirect to home page



EXTRA INFORMATION
	--PAGE 442 in bOOK\
	--https://www.codeproject.com/Articles/425150/Beginners-guide-to-a-secure-way-of-storing-passwor





ALREADY DONE:

	TO VIEW A THREAD
	1. Click on the thread's name (threadSubject) on Home/any page. The thread's name
		needs to be a hyperlink that redirects to "Viewing.aspx". It will be ./Viewing/(threadID).
		That hyperlink will also have to pass (threadID) to the page. "Viewing.aspx" will have
		to take in the (threadID) to search the database.
	2. Find ALL records that contain the (threadID) and pull them. You need to INNER JOIN the Posts,
		Users, and Threads table on [Users](userID) so you can grab the (userName).
		Sort by (timeCreated) for the posts. Then, from the same record, grab postContent, timeCreated,
		and userName.
	3. Put the above into a while loop to continually create <div>'s while there are posts available.
























Server
// all tables created

	Tables (vertabelo.com/blog/technical-articles/database-model-for-an-online-discussion-forum-part-1)
		-user info
			-PK(idNumber)
			-userName
			-password(hashed)
			-DateCreated

		-Thread
			-PK(threadID)
			-subject  //stored as varchar
			-timeCreated 
			-userAccId (FK) //who posted


		-Post
			-PK(postId)
			-content //varChar
			-Created
			-ThreadId (FK)
			-userId (FK)

			sams path: C:\\Users\\riegl2s\\Source\\Repos\\FinalProject\\FinalProject\\App_Data\\Forum.mdf

			tays path: HOME: C:\\Users\\Taylor\\Source\\Repos\\TayCShaw\\FinalProject\\FinalProject\\App_Data\\Forum.mdf;Integrated Security=True
			           SCHOOL: C:\\Users\\shaw1t\\Source\\Repos\\FinalProject\\FinalProject\\App_Data\\Forum.mdf;Integrated Security=True